"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[267],{7337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=n(3117),o=(n(7294),n(3905));const s={title:"useAdminUsers",description:"API reference for the useAdminUsers hook",tags:["admin","hooks","users"]},a=void 0,i={unversionedId:"docs/core/admin/hooks/use-admin-users",id:"docs/core/admin/hooks/use-admin-users",title:"useAdminUsers",description:"API reference for the useAdminUsers hook",source:"@site/docs/docs/01-core/admin/04-hooks/use-admin-users.mdx",sourceDirName:"docs/01-core/admin/04-hooks",slug:"/docs/core/admin/hooks/use-admin-users",permalink:"/docs/core/admin/hooks/use-admin-users",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/admin/04-hooks/use-admin-users.mdx",tags:[{label:"admin",permalink:"/tags/admin"},{label:"hooks",permalink:"/tags/hooks"},{label:"users",permalink:"/tags/users"}],version:"current",frontMatter:{title:"useAdminUsers",description:"API reference for the useAdminUsers hook",tags:["admin","hooks","users"]},sidebar:"docs",previous:{title:"Review Workflows",permalink:"/settings/review-workflows"},next:{title:"Introduction",permalink:"/docs/core/content-manager/intro"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Typescript",id:"typescript",level:2},{value:"Fetch all users",id:"fetch-all-users",level:3},{value:"Fetch one user",id:"fetch-one-user",level:3}],l={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An abstraction around ",(0,o.kt)("inlineCode",{parentName:"p"},"react-query"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"useQuery")," hook. It can be used to fetch one ore more admin users."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The hooks can receive two optional parameters:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"query params: an object containing the query params to be sent to the API. They are going to be\nstringified by ",(0,o.kt)("inlineCode",{parentName:"li"},"qs"),". All params are equal except ",(0,o.kt)("inlineCode",{parentName:"li"},"id"),", which is used to fetch a single users, if\nit is passed."),(0,o.kt)("li",{parentName:"ol"},"options: an object containing the options to be passed to ",(0,o.kt)("inlineCode",{parentName:"li"},"useQuery"),".")),(0,o.kt)("p",null,"It returns an object containing some of the react-query attributes."),(0,o.kt)("h2",{id:"typescript"},"Typescript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { UseQueryOptions } from 'react-query'\n\ntype User = object;\n\nuseAdminUsers(queryParams: object, reactQueryOptions: UseQueryOptions): {\n    users: User[];\n    pagination: {\n        page: number,\n        pageSize: number,\n        total: number,\n    } | null;\n    isLoading: boolean;\n    isError: boolean;\n    refetch: () => Promise<void>;\n};\n")),(0,o.kt)("h3",{id:"fetch-all-users"},"Fetch all users"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useAdminUsers } from 'path/to/hooks';\n\nconst MyComponent = ({ onMoveItem }) => {\n  const { users, isLoading, refetch } = useAdminUsers();\n\n  return /* ... */;\n};\n")),(0,o.kt)("h3",{id:"fetch-one-user"},"Fetch one user"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Box } from '@strapi/design-system';\n\nimport { useAdminUsers } from 'path/to/hooks';\n\nconst MyComponent = ({ onMoveItem }) => {\n  const { users: [user], isLoading, refetch } = useAdminUsers({ id: 1 });\n\n  return /* ... */;\n};\n")))}p.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||s;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);